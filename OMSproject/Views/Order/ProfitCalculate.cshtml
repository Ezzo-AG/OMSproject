@model IEnumerable<OMSproject.Models.ViewModels.ProfetViewModel>

@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="~/css/OrderStyle/order.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Table/TablesStyle.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Table/FormControl.css" asp-append-version="true" />
<link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">

<style>
    .btn-Status {
    font-size: 1.5rem;
    margin: auto 0.2rem;
    padding: .2rem 1rem;
    background: hsl(var(--thd-bg)/ .2);
    color: var(--peachy-red);
    border: 1px solid var(--peachy-red);
    border-radius: .7rem;
    cursor: pointer;
    }
    .cus th {
        cursor:pointer ;
    }
</style>

<form class="d-flex nav-search" asp-action="Search" asp-controller="Order">
    <fieldset>
        <button class="table-item searcher left-floater" title="Back" type="button" onclick="history.back()">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="21" height="23" fill="hsl(var(--txt))" stroke="none" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
                <path d="M21 11H6.414l5.293-5.293-1.414-1.414L2.586 12l7.707 7.707 1.414-1.414L6.414 13H21z"></path>
            </svg>
        </button>
        <h1 class="headers left-floater">Income Profit</h1>
                <div style="clear: both;"></div>

        <div>


        @*<input class="form-control me-2" name="term" type="search" placeholder="Search" aria-label="Search" style="float: right;width: 30%;padding: .6rem;margin: 0 0.5rem 1rem 1rem;  ">*@

            <div class="left-floater" style="width:25rem;">
            <label for="start">Start date</label>
                <input type="date" id="start" name="t-start" style="width:80%;padding: .6rem;margin: 0 0.5rem 1rem 1rem; ">

            </div>
            <div class="left-floater" style="width:25rem;">
            <label for="end">End date</label>
                <input type="date" id="end" name="t-end" style="width:80%;padding: .6rem;margin: 0 0.5rem 1rem 1rem; ">
                <button class="table-item searcher" title="Search Order" type="submit">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="21" height="23" fill="none" stroke="var(--peachy-red)" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="11" cy="11" r="9" fill="none"></circle>
                        <line x1="17.5" y1="17.5" x2="22" y2="22"></line>
                    </svg>

                </button>
            </div>

    </div>

        <div style=" clear: both; margin: 1rem;">
            <h4 style="font-weight: 400;color: hsl(var(--txt) /.5);margin: 1.5rem 0rem;"> 
                
            </h4>

        </div>
        <table class="table" id="myTable" style="margin: 3rem auto 0;" >
            <thead class="cus">
                <tr>
                    <th onclick="sortTable(0)">
                        # 
                    </th>
                    <th onclick="sortTable(1)">
                        Order Date
                    </th>
                    <th onclick="sortTable(2)">
                        Cost
                    </th>
                    <th onclick="sortTable(3)">
                        Sell Price
                    </th>
                    <th onclick="sortTable(4)">
                        Total Profit
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                        <tr>
                            <td>
                            <p class="profit">@item.Profet</p>
                            </td>
                            <td>
                            @Html.DisplayFor(modelItem => item.OrderDate)
                            </td>
                            <td class="cost">
                            @Html.DisplayFor(modelItem => item.OrderCoast) 
                            </td>
                            <td class="currency sellPrice">
                            @Html.DisplayFor(modelItem => item.OrderSellPrice)
                            </td>
                            <td class="currency">
                              <p class="profit">@item.Profet</p>
                            </td>

                        </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td>
                       Total
                    </td>
                                        <td>
                   
                    </td>
                                        <td>
                    Cost
                    </td>
                                        <td>
                    Price
                    </td>
                                        <td>
                    Total
                    </td>
                    <td>
                       <input id="Tprofit" readonly type="text"  />
                    </td>
                    <td>
                        <input type="button" value="click" onClick="CalculateTotal()" />
                    </td>
                    </tr>
            </tfoot>
        </table>
    </fieldset>
</form>
<script>
    var date = new Date();

    var monthStart = Date.UTC(date.getFullYear(), date.getMonth())
    monthStart = toIsoDateString(monthStart);
    starter = document.getElementById("start")
    starter.value = monthStart;
    console.log(monthStart);

    var lastYear = Date.UTC(date.getFullYear(), date.getMonth() - 12);
    lastYear = toIsoDateString(lastYear);
    ender = document.getElementById("end")
    ender.value = lastYear;
    console.log(lastYear);

    function toIsoDateString(utcDate) {
        var date = new Date(utcDate);
        return date.toISOString().split('T')[0];
    }
</script>

@section Scripts {
    <script>
        function CalculateTotal() {

            var x = document.getElementsByClassName('profit');
            var Tprofit = 0;
            var i;

            for (i = 0; i < x.length; i++) {

                Tprofit = Tprofit + eval(x[i].value);
                console.log(eval(x[i].value));
            }
            document.getElementById('Tprofit').value = Tprofit;
            return;
        }
    </script>
}

