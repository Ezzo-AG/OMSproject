@model IEnumerable<OMSproject.Models.Order>

@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="~/css/OrderStyle/order.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Table/TablesStyle.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Table/FormControl.css" asp-append-version="true" />
<link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">
<style>
    .cus th {
        cursor:pointer ;
    }
</style>
<form class="d-flex nav-search" asp-action="Search" asp-controller="Order">
    <fieldset>
        <h1 class="headers left-floater">Order Index</h1>
        <div>

        <button class="table-item searcher" title="Search Order" type="submit">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="30" height="30" fill="none" stroke="var(--peachy-red)" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="11" cy="11" r="9" fill="none"></circle>
                <line x1="17.5" y1="17.5" x2="22" y2="22"></line>
            </svg>
        </button>
        <input class="form-control me-2" name="term" type="search" placeholder="Search" aria-label="Search" style="float: right;width: 30%;padding: .6rem;margin: 0 0.5rem 1rem 1rem;  ">
        </div>


        <div>
            <button asp-action="searchNew">
                NEW
            </button>
            <button asp-action="searchInprogress">
                Inprogress
            </button>
            <button asp-action="searchDelivered">
                Delivered
            </button>    
            <button asp-action="searchCanceled">
                Calnceled
            </button>

        </div>

        <table class="table" id="myTable">
            <thead class="cus">
                <tr>
                    <th onclick="sortTable(0)">
                        @*@Html.DisplayNameFor(model => model.Client)*@
                        Client Name
                    </th>
                    <th onclick="sortTable(1)">
                        @*@Html.DisplayNameFor(model => model.Address)*@
                        Address
                    </th>
                    <th onclick="sortTable(2)">
                        @*@Html.DisplayNameFor(model => model.DateOFOrder)*@
                        Order Date
                    </th>
                    <th onclick="sortTable(3)">
                        @*@Html.DisplayNameFor(model => model.Total_price)*@
                        Price
                    </th>
                    <th onclick="sortTable(4)">
                        @*@Html.DisplayNameFor(model => model.SellPrice)*@
                        Sell Price
                    </th>
                    <th onclick="sortTable(5)">
                        @*@Html.DisplayNameFor(model => model.OrderStatus)*@
                        Status
                    </th>
                    <th onclick="sortTable(6)">
                        @*@Html.DisplayNameFor(model => model.Notes)*@
                        Notes
                    </th>

                    <th style="width: 10%"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Client.ClientName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOFOrder)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Total_price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SellPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderStatus)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Notes)
                        </td>

                        <td class="table-item">
                            <a asp-action="Edit" asp-route-id="@item.OrderId" title="Edit">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="36" height="36" fill="none" stroke="#000000" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M18.16,3.66l2.18,2.18a2,2,0,0,1,0,2.82l-13,13.05a1,1,0,0,1-.7.29H2V17.41a1,1,0,0,1,.29-.7l13.05-13A2,2,0,0,1,18.16,3.66Z"></path>
                                    <line x1="12.5" y1="6.5" x2="17.5" y2="11.5"></line>
                                </svg>


                            </a>
                            <a asp-action="Details" asp-route-id="@item.OrderId" title="Details">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="36" height="36" fill="none" stroke="#000000" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
                                    <line x1="20" y1="12" x2="8" y2="12"></line>
                                    <line x1="20" y1="6" x2="8" y2="6"></line>
                                    <line x1="20" y1="18" x2="8" y2="18">
                                    </line>
                                    <line x1="3.99" y1="6" x2="4" y2="6"></line>
                                    <line x1="3.99" y1="12" x2="4" y2="12"></line>
                                    <line x1="3.99" y1="18" x2="4" y2="18"></line>
                                </svg>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </fieldset>
</form>
<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
        dir = "asc";
        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                // Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /* If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again. */
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }


    function getOrdersByStatus(){

    }
</script>

@*<scriptL>

    document.querySelectorAll(".classy").forEach(function (obj) {
    if (obj.innerText === "VIP") {
    // obj.style.backgroundColor = "var(--clr-vip)";
    obj.classList.add("VIP");

    }
    if (obj.innerText === "New-Client") {
    // obj.style.backgroundColor = "var(--clr-new)";
    obj.classList.add("New-Client");
    }
    else if (obj.innerText === "Blacklist") {
    // obj.style.backgroundColor = "var(--clr-blacklist)";
    obj.classList.add("Blacklist");
    }
    });
</scriptL>*@